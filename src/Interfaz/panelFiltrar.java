/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Principal_datos.main;

// la lista de la clase ventanaPrincipal
//Tambien exportamos la clase Persona
import static Interfaz.ventanaPrincipal.listemp;
import Principal_datos.Cliente;
import Principal_datos.Lista;
import Principal_datos.Persona;
import Principal_datos.Socio;

import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
/**
 *
 * @author ZeroAstro
 */
public class panelFiltrar extends javax.swing.JPanel {

    // Nueva lista con los filtros seleccionados
    protected Lista<Persona> listFiltrada;
    private int cont=0;
    
    public panelFiltrar() {
        initComponents();
        
        // Oculto los botones anterior, siguiente
        jButton1.setVisible(false);
        jButton2.setVisible(false);
        
        // Dejo en blanco los campos de texto
         jTextField1.setText("");
         jTextField2.setText("");
         jTextField3.setText("");
         jTextField4.setText("");   
        
        // Desactivo los campos de texto nada mas crear el panel
         jTextField1.setEnabled(false);
         jTextField2.setEnabled(false);
         jTextField3.setEnabled(false);
         jTextField4.setEnabled(false);
         
         // Hago desaparecer los campos de la lista
            jLabel4.setVisible(false);
            jLabel5.setVisible(false);
            jLabel6.setVisible(false);
            jLabel7.setVisible(false);
            jLabel8.setVisible(false);
            jLabel9.setVisible(false);
            jLabel10.setVisible(false);
            
             // Hago desaparecer los campos de texto de la lista
            jTextField5.setVisible(false);
            jTextField6.setVisible(false);
            jTextField7.setVisible(false);
            jTextField8.setVisible(false);
            jTextField9.setVisible(false);
            jTextField10.setVisible(false);
            jTextField11.setVisible(false);
            jTextField12.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 153, 153));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/atras.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/adelante.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField1.setText("jTextField1");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setText("jTextField2");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField3.setText("jTextField3");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jTextField4.setText("jTextField4");
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Por fecha");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Por dato especial");

        jCheckBox1.setText("Mes");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Año");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setText("Desde el año");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jCheckBox4.setText("Saldo");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jButton3.setText("Cancelar");
        jButton3.setAutoscrolls(true);
        jButton3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setText("Enter despues de escribir en el campo para filtrar");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setText("Nombre");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setText("Codigo");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setText("Deuda");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel7.setText("Fecha de ingreso");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setText("Saldo / año desde");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel9.setText("Comision / Direccion");

        jTextField5.setText("jTextField5");

        jTextField6.setText("jTextField6");

        jTextField7.setText("jTextField7");

        jTextField8.setText("jTextField8");

        jTextField9.setText("jTextField9");
        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });

        jTextField10.setText("jTextField10");

        jTextField11.setText("jTextField11");

        jTextField12.setText("jTextField12");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel10.setText("jLabel10");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jCheckBox1)))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jCheckBox2)))))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jCheckBox3)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(27, 27, 27)
                                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(9, 9, 9)))
                        .addGap(81, 81, 81)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jCheckBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addGap(84, 84, 84))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(244, 244, 244)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel10))
                            .addComponent(jLabel5)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(216, 216, 216)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox2)
                            .addComponent(jCheckBox1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox3)
                            .addComponent(jCheckBox4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        

        if(jCheckBox1.isSelected())
        {
            // Activo el campo a filtrar
            jTextField1.setEnabled(true);
            
             // Pongo un color de fondo para que se note que queda activado
           if(jTextField1.isEnabled())
                 jTextField1.setBackground(new java.awt.Color(255, 255, 0));
             
            // Desactivo los demas checkbox
            jCheckBox2.setEnabled(false);
            jCheckBox3.setEnabled(false);
            jCheckBox4.setEnabled(false);
             // Desactivo si estan marcados los demas checkbox
            jCheckBox2.setSelected(false);
            jCheckBox3.setSelected(false);
            jCheckBox4.setSelected(false);
            
            // Los campos de texto los pongo en blanco
            jTextField2.setText("");
            jTextField3.setText("");
            jTextField4.setText("");   
            
            
        }else
        {
            // Vuelvo a poner el color por defecto del campo
             jTextField1.setBackground(new java.awt.Color(240, 240, 240));
             
              // Contador principal de 0 para iniciar la lista de nuevo
              cont = 0;
              
             jTextField1.setText("");
            // Activo los demas checkbox
            jCheckBox2.setEnabled(true);
            jCheckBox3.setEnabled(true);
            jCheckBox4.setEnabled(true);
            
             // Desactivo los  campos al deseleccionar
            jTextField1.setEnabled(false);
            jTextField2.setEnabled(false);
            jTextField3.setEnabled(false);
            jTextField4.setEnabled(false);
            
              // Hago desaparecer los campos de la lista
                       jLabel4.setVisible(false);
                       jLabel5.setVisible(false);
                       jLabel6.setVisible(false);
                       jLabel7.setVisible(false);
                       jLabel8.setVisible(false);
                       jLabel9.setVisible(false);
                       jLabel10.setVisible(false);

                        // Hago desaparecer los campos de texto de la lista
                       jTextField5.setVisible(false);
                       jTextField6.setVisible(false);
                       jTextField7.setVisible(false);
                       jTextField8.setVisible(false);
                       jTextField9.setVisible(false);
                       jTextField10.setVisible(false);
                       jTextField11.setVisible(false);
                       jTextField12.setVisible(false);
                       
                       // Oculto los botones anterior y siguiente
              jButton1.setVisible(false);
               jButton2.setVisible(false);
               
               jButton1.setEnabled(true);
              jButton2.setEnabled(true);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        cont = 0;
        
        // Vuelvo al panel Visualizar datos
        panelVisualizar p1 = new panelVisualizar();
        main.cambiarPanel(p1);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        if(jCheckBox2.isSelected())
        {
            // Activo el campo a filtrar
            jTextField2.setEnabled(true);
            
            // Pongo un color de fondo para que se note que queda activado
            if(jTextField2.isEnabled())  
                 jTextField2.setBackground(new java.awt.Color(255, 255, 0));
            
            
             // Desactivo los  campos en desuso
            jTextField1.setEnabled(false);
            jTextField3.setEnabled(false);
            jTextField4.setEnabled(false);
            
            // Desactivo los demas checkbox
            jCheckBox1.setEnabled(false);
            jCheckBox3.setEnabled(false);
            jCheckBox4.setEnabled(false);
             // Desactivo si estan marcados los demas checkbox
            jCheckBox1.setSelected(false);
            jCheckBox3.setSelected(false);
            jCheckBox4.setSelected(false);
            
            // Los campos de texto los pongo en blanco
            jTextField1.setText("");
            jTextField3.setText("");
            jTextField4.setText("");   
            
            
        }else
        {
            // Vuelvo a poner el color por defecto del campo
              jTextField2.setBackground(new java.awt.Color(240, 240, 240));
              
               // Contador principal de 0 para iniciar la lista de nuevo
              cont = 0;
                jTextField2.setText("");
            // Activo los demas checkbox
            jCheckBox1.setEnabled(true);
            jCheckBox3.setEnabled(true);
            jCheckBox4.setEnabled(true);
            
             // Desactivo los  campos al deseleccionar
            jTextField1.setEnabled(false);
            jTextField2.setEnabled(false);
            jTextField3.setEnabled(false);
            jTextField4.setEnabled(false);
            
              // Hago desaparecer los campos de la lista
                       jLabel4.setVisible(false);
                       jLabel5.setVisible(false);
                       jLabel6.setVisible(false);
                       jLabel7.setVisible(false);
                       jLabel8.setVisible(false);
                       jLabel9.setVisible(false);
                       jLabel10.setVisible(false);

                        // Hago desaparecer los campos de texto de la lista
                       jTextField5.setVisible(false);
                       jTextField6.setVisible(false);
                       jTextField7.setVisible(false);
                       jTextField8.setVisible(false);
                       jTextField9.setVisible(false);
                       jTextField10.setVisible(false);
                       jTextField11.setVisible(false);
                       jTextField12.setVisible(false);
                       
               jButton1.setEnabled(true);
              jButton2.setEnabled(true);
                       // Oculto los botones anterior y siguiente
              jButton1.setVisible(false);
               jButton2.setVisible(false);
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        if(jCheckBox3.isSelected())
        {
            // Activo el campo a filtrar
            jTextField3.setEnabled(true);
            
             // Pongo un color de fondo para que se note que queda activado
           if(jTextField3.isEnabled())
                jTextField3.setBackground(new java.awt.Color(255, 255, 0));
            
             // Desactivo los  campos en desuso
            jTextField1.setEnabled(false);
            jTextField2.setEnabled(false);
            jTextField4.setEnabled(false);
            
            // Desactivo los demas checkbox
            jCheckBox2.setEnabled(false);
            jCheckBox1.setEnabled(false);
            jCheckBox4.setEnabled(false);
             // Desactivo si estan marcados los demas checkbox
            jCheckBox1.setSelected(false);
            jCheckBox2.setSelected(false);
            jCheckBox4.setSelected(false);
            
            // Los campos de texto los pongo en blanco
            jTextField1.setText("");
            jTextField2.setText("");
            jTextField4.setText("");   
            
            
        }else
        {
            // Vuelvo a poner el color por defecto del campo
              jTextField3.setBackground(new java.awt.Color(240, 240, 240));
              
                jTextField3.setText("");
                
                 // Contador principal de 0 para iniciar la lista de nuevo
              cont = 0;
            // Activo los demas checkbox
            jCheckBox1.setEnabled(true);
            jCheckBox2.setEnabled(true);
            jCheckBox4.setEnabled(true);
            
           // Desactivo los  campos al deseleccionar
            jTextField1.setEnabled(false);
            jTextField2.setEnabled(false);
            jTextField3.setEnabled(false);
            jTextField4.setEnabled(false);
            
              // Hago desaparecer los campos de la lista
                       jLabel4.setVisible(false);
                       jLabel5.setVisible(false);
                       jLabel6.setVisible(false);
                       jLabel7.setVisible(false);
                       jLabel8.setVisible(false);
                       jLabel9.setVisible(false);
                       jLabel10.setVisible(false);

                        // Hago desaparecer los campos de texto de la lista
                       jTextField5.setVisible(false);
                       jTextField6.setVisible(false);
                       jTextField7.setVisible(false);
                       jTextField8.setVisible(false);
                       jTextField9.setVisible(false);
                       jTextField10.setVisible(false);
                       jTextField11.setVisible(false);
                       jTextField12.setVisible(false);
                       
                       jButton1.setEnabled(true);
                       jButton2.setEnabled(true);
                       // Oculto los botones anterior y siguiente
              jButton1.setVisible(false);
               jButton2.setVisible(false);
        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
       if(jCheckBox4.isSelected())
        {
            // Activo el campo a filtrar
            jTextField4.setEnabled(true);
            
             // Pongo un color de fondo para que se note que queda activado
             
             if(jTextField4.isEnabled())
                 jTextField4.setBackground(new java.awt.Color(255, 255, 0));
            
             // Desactivo los  campos en desuso
            jTextField1.setEnabled(false);
            jTextField3.setEnabled(false);
            jTextField2.setEnabled(false);
            
            
            // Desactivo los demas checkbox
            jCheckBox1.setEnabled(false);
            jCheckBox3.setEnabled(false);
            jCheckBox2.setEnabled(false);
             // Desactivo si estan marcados los demas checkbox
            jCheckBox1.setSelected(false);
            jCheckBox3.setSelected(false);
            jCheckBox2.setSelected(false);
            
            // Los campos de texto los pongo en blanco
            jTextField1.setText("");
            jTextField3.setText("");
            jTextField2.setText("");   
            
            
        }else
        {
            // Vuelvo a poner el color por defecto del campo
              jTextField4.setBackground(new java.awt.Color(240, 240, 240));
            
              jTextField4.setText("");
              
              jButton1.setEnabled(true);
              jButton2.setEnabled(true);
              
              // Oculto los botones anterior y siguiente
              jButton1.setVisible(false);
              jButton2.setVisible(false);
               
              // Contador principal de 0 para iniciar la lista de nuevo
              cont = 0;
              
            // Activo los demas checkbox
            jCheckBox1.setEnabled(true);
            jCheckBox3.setEnabled(true);
            jCheckBox2.setEnabled(true);
            
           // Desactivo los  campos al deseleccionar
            jTextField1.setEnabled(false);
            jTextField2.setEnabled(false);
            jTextField3.setEnabled(false);
            jTextField4.setEnabled(false);
            
              // Hago desaparecer los campos de la lista
                       jLabel4.setVisible(false);
                       jLabel5.setVisible(false);
                       jLabel6.setVisible(false);
                       jLabel7.setVisible(false);
                       jLabel8.setVisible(false);
                       jLabel9.setVisible(false);
                       jLabel10.setVisible(false);

                        // Hago desaparecer los campos de texto de la lista
                       jTextField5.setVisible(false);
                       jTextField6.setVisible(false);
                       jTextField7.setVisible(false);
                       jTextField8.setVisible(false);
                       jTextField9.setVisible(false);
                       jTextField10.setVisible(false);
                       jTextField11.setVisible(false);
                       jTextField12.setVisible(false);
            
        }
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    // campo mes
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        try {
             listFiltrada = new Lista<>();
             
            String cadenaMes = jTextField1.getText();
            int mes = Integer.parseInt(cadenaMes);
            

           boolean creado = crearListaFiltradaPorMes(mes);
            
            if(creado)
            {
                   // Hago que se vean los botones anterior y siguiente
                      jButton1.setVisible(true);
                      jButton2.setVisible(true);
                      
                   // Desactivo el boton hacia atras
                   jButton1.setEnabled(false);

                   main.cambiarTamaño(1280, 720);

                   // Hago Aparecer los campos de la lista
                       jLabel4.setVisible(true);
                       jLabel5.setVisible(true);
                       jLabel6.setVisible(true);
                       jLabel7.setVisible(true);
                       jLabel8.setVisible(true);
                       jLabel9.setVisible(true);
                       jLabel10.setVisible(true);

                        // Hago aparecer los campos de texto de la lista
                       jTextField5.setVisible(true);
                       jTextField6.setVisible(true);
                       jTextField7.setVisible(true);
                       jTextField8.setVisible(true);
                       jTextField9.setVisible(true);
                       jTextField10.setVisible(true);
                       jTextField11.setVisible(true);
                       jTextField12.setVisible(true);
                
                
               Persona obj = listFiltrada.obtener(cont);
                
               actualizarDatos(obj);
               
               if(cont==(listFiltrada.tamanio()-1))
                   jButton2.setEnabled(false);

            }
            else
                JOptionPane.showMessageDialog(null, "No hay datos con ese filtro...", "Lista vacia", JOptionPane.ERROR_MESSAGE);
            
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Introduce numeros, letras no", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jTextField1ActionPerformed

    
    
    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9ActionPerformed

    // Boton siguiente
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

         cont++;
         
         jButton1.setEnabled(true);
         
         if(cont==listFiltrada.tamanio()-1)
              jButton2.setEnabled(false);
         
       
         Persona obj = listFiltrada.obtener(cont);
            
         actualizarDatos(obj);
         
         

    }//GEN-LAST:event_jButton2ActionPerformed

    // Boton anterior
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        cont--;
        
        if(cont!=listFiltrada.tamanio()-1)
             jButton2.setEnabled(true);
        
        if(cont==0)
            jButton1.setEnabled(false);
        
         Persona obj = listFiltrada.obtener(cont);

         actualizarDatos(obj);      
                
        
    }//GEN-LAST:event_jButton1ActionPerformed

    // CAMPO AÑO
    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed

        try {
            listFiltrada = new Lista<>();
            String cadenaAño = jTextField2.getText();
            int año = Integer.parseInt(cadenaAño);
            
            boolean creado = crearListaFiltradaPorAño(año);
            
           
            if(creado)
            {
                            // Hago que se vean los botones anterior y siguiente
                   jButton1.setVisible(true);
                   jButton2.setVisible(true);

                   // Desactivo el boton hacia atras
                   jButton1.setEnabled(false);

                   main.cambiarTamaño(1280, 720);

                   // Hago Aparecer los campos de la lista
                       jLabel4.setVisible(true);
                       jLabel5.setVisible(true);
                       jLabel6.setVisible(true);
                       jLabel7.setVisible(true);
                       jLabel8.setVisible(true);
                       jLabel9.setVisible(true);
                       jLabel10.setVisible(true);

                        // Hago aparecer los campos de texto de la lista
                       jTextField5.setVisible(true);
                       jTextField6.setVisible(true);
                       jTextField7.setVisible(true);
                       jTextField8.setVisible(true);
                       jTextField9.setVisible(true);
                       jTextField10.setVisible(true);
                       jTextField11.setVisible(true);
                       jTextField12.setVisible(true);
                
                
               Persona obj = listFiltrada.obtener(cont);
                
               actualizarDatos(obj);
               
               if(cont==(listFiltrada.tamanio()-1))
                   jButton2.setEnabled(false);

            }
            else
                JOptionPane.showMessageDialog(null, "No hay datos con ese filtro...", "Lista vacia", JOptionPane.ERROR_MESSAGE);
            
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Introduce numeros, letras no", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jTextField2ActionPerformed

    //campo desde año
    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        try {
            listFiltrada = new Lista<>();
            String cadenaAño = jTextField3.getText();
            int año = Integer.parseInt(cadenaAño);
            
            boolean creado = crearListaFiltradaPorAñoDesde(año);
            
           
            if(creado)
            {
                      // Hago que se vean los botones anterior y siguiente
                   jButton1.setVisible(true);
                   jButton2.setVisible(true);

                   // Desactivo el boton hacia atras
                   jButton1.setEnabled(false);

                   main.cambiarTamaño(1280, 720);

                   // Hago Aparecer los campos de la lista
                       jLabel4.setVisible(true);
                       jLabel5.setVisible(true);
                       jLabel6.setVisible(true);
                       jLabel7.setVisible(true);
                       jLabel8.setVisible(true);
                       jLabel9.setVisible(true);
                       jLabel10.setVisible(true);

                        // Hago aparecer los campos de texto de la lista
                       jTextField5.setVisible(true);
                       jTextField6.setVisible(true);
                       jTextField7.setVisible(true);
                       jTextField8.setVisible(true);
                       jTextField9.setVisible(true);
                       jTextField10.setVisible(true);
                       jTextField11.setVisible(true);
                       jTextField12.setVisible(true);
                
                
               Persona obj = listFiltrada.obtener(cont);
                
               actualizarDatos(obj);
               
               if(cont==(listFiltrada.tamanio()-1))
                   jButton2.setEnabled(false);

            }
            else
                JOptionPane.showMessageDialog(null, "No hay datos con ese filtro...", "Lista vacia", JOptionPane.ERROR_MESSAGE);
            
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Introduce numeros, letras no", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jTextField3ActionPerformed

    // Campo saldo
    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        try {
            listFiltrada = new Lista<>();
            String saldo = jTextField4.getText();
            int s = Integer.parseInt(saldo);
            
            boolean creado = crearListaFiltradaPorSaldo(s);

            if(creado)
            {
                      // Hago que se vean los botones anterior y siguiente
                   jButton1.setVisible(true);
                   jButton2.setVisible(true);

                   // Desactivo el boton hacia atras
                   jButton1.setEnabled(false);

                   main.cambiarTamaño(1280, 720);

                   // Hago Aparecer los campos de la lista
                       jLabel4.setVisible(true);
                       jLabel5.setVisible(true);
                       jLabel6.setVisible(true);
                       jLabel7.setVisible(true);
                       jLabel8.setVisible(true);
                       jLabel9.setVisible(true);
                       jLabel10.setVisible(true);

                        // Hago aparecer los campos de texto de la lista
                       jTextField5.setVisible(true);
                       jTextField6.setVisible(true);
                       jTextField7.setVisible(true);
                       jTextField8.setVisible(true);
                       jTextField9.setVisible(true);
                       jTextField10.setVisible(true);
                       jTextField11.setVisible(true);
                       jTextField12.setVisible(true);
                
                
               Persona obj = listFiltrada.obtener(cont);
                
               actualizarDatos(obj);
               
               if(cont==(listFiltrada.tamanio()-1))
                   jButton2.setEnabled(false);

            }
            else
                JOptionPane.showMessageDialog(null, "No hay datos con ese filtro...", "Lista vacia", JOptionPane.ERROR_MESSAGE);
            
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Introduce numeros, letras no", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void actualizarDatos(Persona obj)
    {
        GregorianCalendar fechaObj;
        
         if(obj instanceof Socio)
         {
                    jLabel8.setText("Año desde");
                    jLabel9.setText("Comision");
                    jLabel10.setText("socio");
                    
                    fechaObj = obj.getFecha();
                    
                     jTextField5.setText(""+obj.getNombre());
                    jTextField6.setText(""+obj.getCodigo());
                    jTextField7.setText(""+obj.getDeuda());
                    jTextField8.setText(""+fechaObj.get(Calendar.DAY_OF_MONTH));
                    jTextField9.setText(""+(fechaObj.get(Calendar.MONTH)+1));
                    jTextField10.setText(""+fechaObj.get(Calendar.YEAR));
                    jTextField11.setText(""+obj.getDato());
                    jTextField12.setText(""+( (Socio) obj).getComision());
                    
         }
                
         if(obj instanceof Cliente)
         {
               jLabel8.setText("Saldo");
               jLabel9.setText("Direccion");
               jLabel10.setText("cliente");
                    
               fechaObj = obj.getFecha();
                    
               jTextField5.setText(""+obj.getNombre());
               jTextField6.setText(""+obj.getCodigo());
               jTextField7.setText(""+obj.getDeuda());
               jTextField8.setText(""+fechaObj.get(Calendar.DAY_OF_MONTH));
               jTextField9.setText(""+(fechaObj.get(Calendar.MONTH)+1));
               jTextField10.setText(""+fechaObj.get(Calendar.YEAR));
               jTextField11.setText(""+obj.getDato());
               jTextField12.setText(""+( (Cliente) obj).getDireccion());
         }
                
       
    }
    
    
    private boolean crearListaFiltradaPorMes(int mes)
    {
        Persona obj;
        GregorianCalendar fecha;
        int mesComparacion;
        boolean alMenosUno=false;
        int c = 0;
        
        while(c<listemp.tamanio())
        {
            obj = listemp.obtener(c);
            fecha = obj.getFecha();
            mesComparacion = fecha.get(Calendar.MONTH);
            
            
            if(mesComparacion+1==mes){
                listFiltrada.anadirAlFinal(obj);
                alMenosUno=true;
            }
            
            c++;
        }
        
        return alMenosUno;
        
    }
    
     private boolean crearListaFiltradaPorAño(int año)
    {
        Persona obj;
        GregorianCalendar fecha;
        int añoComparacion;
        boolean alMenosUno=false;
        int c = 0;
        
        while(c<listemp.tamanio())
        {
            obj = listemp.obtener(c);
            fecha = obj.getFecha();
            añoComparacion = fecha.get(Calendar.YEAR);
            
            
            if(añoComparacion==año){
                listFiltrada.anadirAlFinal(obj);
                alMenosUno=true;
            }
            
            c++;
        }
        
        return alMenosUno;
        
    }
     
    private boolean crearListaFiltradaPorAñoDesde(int dato)
    {
        Persona obj;
        boolean alMenosUno=false;
        int c = 0;
        
        while(c<listemp.tamanio())
        {
            obj = listemp.obtener(c);

            if(obj.getDato()==dato && obj instanceof Socio){
                listFiltrada.anadirAlFinal(obj);
                alMenosUno=true;
            }
            
            c++;
        }
        
        return alMenosUno;
        
    }
    
    private boolean crearListaFiltradaPorSaldo(int dato)
    {
        Persona obj;
        boolean alMenosUno=false;
        int c = 0;
        
        while(c<listemp.tamanio())
        {
            obj = listemp.obtener(c);

            if(obj.getDato()==dato && obj instanceof Cliente){
                listFiltrada.anadirAlFinal(obj);
                alMenosUno=true;
            }
            
            c++;
        }
        
        return alMenosUno;
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
